{
	"info": {
		"_postman_id": "ec001c6e-0b26-4c38-a6fc-55bbcf084dc3",
		"name": "Integration Tests User Service",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "29456304"
	},
	"item": [
		{
			"name": "Crea Profilo",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n  \"description\": \"profilo1\",\n  \"profileId\": 1\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{baseUrl}}/api/v1/user-service/profile",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"api",
						"v1",
						"user-service",
						"profile"
					]
				}
			},
			"response": []
		},
		{
			"name": "Fallisci nel creare un profilo con id già presente a database",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 400\", function () {",
							"    pm.response.to.have.status(400);",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n  \"description\": \"profilo1\",\n  \"profileId\": 1\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{baseUrl}}/api/v1/user-service/profile",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"api",
						"v1",
						"user-service",
						"profile"
					]
				}
			},
			"response": []
		},
		{
			"name": "Crea profilo 2",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n  \"description\": \"profilo2\",\n  \"profileId\": 2\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{baseUrl}}/api/v1/user-service/profile",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"api",
						"v1",
						"user-service",
						"profile"
					]
				}
			},
			"response": []
		},
		{
			"name": "Modifica il profilo con id 2",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"var jsonData = JSON.parse(pm.response.text());",
							"",
							"pm.test(\"description updated as expected\", function () {",
							"    pm.expect(jsonData.description).to.equal(\"profilo2_mod\");",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "PUT",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n  \"description\": \"profilo2_mod\",\n  \"profileId\": 2\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{baseUrl}}/api/v1/user-service/profile",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"api",
						"v1",
						"user-service",
						"profile"
					]
				}
			},
			"response": []
		},
		{
			"name": "Fallisci nel modificare un profilo inesistente",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 400\", function () {",
							"    pm.response.to.have.status(400);",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "PUT",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n  \"description\": \"profilo10_mod\",\n  \"profileId\": 10\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{baseUrl}}/api/v1/user-service/profile",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"api",
						"v1",
						"user-service",
						"profile"
					]
				}
			},
			"response": []
		},
		{
			"name": "Recupera tutti i profili presenti a database",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"var jsonData = JSON.parse(pm.response.text());",
							"",
							"pm.test(\"Profiles found are 3\", function () {",
							"    pm.expect(jsonData.length).to.equal(2);",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"method": "GET",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{baseUrl}}/api/v1/user-service/profile",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"api",
						"v1",
						"user-service",
						"profile"
					]
				}
			},
			"response": []
		},
		{
			"name": "Tentativo di accesso con User non registrato",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 404\", function () {",
							"    pm.response.to.have.status(404);",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"url": {
					"raw": "{{baseUrl}}/api/v1/user-service/users/first-access/:userId",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"api",
						"v1",
						"user-service",
						"users",
						"first-access",
						":userId"
					],
					"variable": [
						{
							"key": "userId",
							"value": "esempio@dominio.it"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Creazione User",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"var jsonData = JSON.parse(pm.response.text());",
							"",
							"pm.test(\"data inserted correctly\", function () {",
							"    pm.expect(jsonData.userId).to.equal(\"email@domain.com\");",
							"    pm.expect(jsonData.name).to.equal(\"name\");",
							"    pm.expect(jsonData.surname).to.equal(\"surname\");",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n  \"userId\": \"email@domain.com\",\n  \"name\": \"name\",\n  \"surname\": \"surname\"\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{baseUrl}}/api/v1/user-service/users/insert",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"api",
						"v1",
						"user-service",
						"users",
						"insert"
					]
				}
			},
			"response": []
		},
		{
			"name": "Update User",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"var jsonData = JSON.parse(pm.response.text());",
							"",
							"pm.test(\"data inserted correctly\", function () {",
							"    pm.expect(jsonData.userId).to.equal(\"email@domain.com\");",
							"    pm.expect(jsonData.name).to.equal(\"name_mod\");",
							"    pm.expect(jsonData.surname).to.equal(\"surname_mod\");",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "PUT",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n  \"userId\": \"email@domain.com\",\n  \"name\": \"name_mod\",\n  \"surname\": \"surname_mod\"\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{baseUrl}}/api/v1/user-service/users/update",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"api",
						"v1",
						"user-service",
						"users",
						"update"
					]
				}
			},
			"response": []
		},
		{
			"name": "Fallisci nell'update di user inesistente",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 404\", function () {",
							"    pm.response.to.have.status(404);",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "PUT",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n  \"userId\": \"email3@domain.com\",\n  \"name\": \"name_mod\",\n  \"surname\": \"surname_mod\"\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{baseUrl}}/api/v1/user-service/users/update",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"api",
						"v1",
						"user-service",
						"users",
						"update"
					]
				}
			},
			"response": []
		},
		{
			"name": "Fallisci nella creazione di uno user con user id già presente a database",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 400\", function () {",
							"    pm.response.to.have.status(400);",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n  \"userId\": \"email@domain.com\",\n  \"name\": \"name\",\n  \"surname\": \"surname\"\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{baseUrl}}/api/v1/user-service/users/insert",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"api",
						"v1",
						"user-service",
						"users",
						"insert"
					]
				}
			},
			"response": []
		},
		{
			"name": "Tentativo di accesso con User registrato",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"url": {
					"raw": "{{baseUrl}}/api/v1/user-service/users/first-access/:userId",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"api",
						"v1",
						"user-service",
						"users",
						"first-access",
						":userId"
					],
					"variable": [
						{
							"key": "userId",
							"value": "email@domain.com"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Inserimento Utente2 con profilo 1",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"var jsonData = JSON.parse(pm.response.text());",
							"",
							"pm.test(\"data inserted correctly\", function () {",
							"    pm.expect(jsonData.userId).to.equal(\"email2@domain.com\");",
							"    pm.expect(jsonData.name).to.equal(\"name2\");",
							"    pm.expect(jsonData.surname).to.equal(\"surname2\");",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n  \"userId\": \"email2@domain.com\",\n  \"name\": \"name2\",\n  \"surname\": \"surname2\",\n  \"profileIds\": [\n    1\n  ]\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{baseUrl}}/api/v1/user-service/users/insert-with-profiles",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"api",
						"v1",
						"user-service",
						"users",
						"insert-with-profiles"
					]
				}
			},
			"response": []
		},
		{
			"name": "Crea nuova associazione user-profilo",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"var jsonData = JSON.parse(pm.response.text());",
							"",
							"pm.test(\"data inserted correctly\", function () {",
							"    pm.expect(jsonData[0].profileId).to.equal(2);",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n  \"userId\": \"email2@domain.com\",\n  \"profileIds\": [\n    2\n  ]\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{baseUrl}}/api/v1/user-service/user_profiles/insert",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"api",
						"v1",
						"user-service",
						"user_profiles",
						"insert"
					]
				}
			},
			"response": []
		},
		{
			"name": "Fallisci nel creare una nuova associazione profilo inesistente",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 500\", function () {",
							"    pm.response.to.have.status(500);",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n  \"userId\": \"email2@domain.com\",\n  \"profileIds\": [\n    3\n  ]\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{baseUrl}}/api/v1/user-service/user_profiles/insert",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"api",
						"v1",
						"user-service",
						"user_profiles",
						"insert"
					]
				}
			},
			"response": []
		},
		{
			"name": "Fallisci nel creare una nuova associazione user inesistente",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 500\", function () {",
							"    pm.response.to.have.status(500);",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n  \"userId\": \"email3@domain.com\",\n  \"profileIds\": [\n    2\n  ]\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{baseUrl}}/api/v1/user-service/user_profiles/insert",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"api",
						"v1",
						"user-service",
						"user_profiles",
						"insert"
					]
				}
			},
			"response": []
		},
		{
			"name": "Aggiorna associazioni dello user 2",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"var jsonData = JSON.parse(pm.response.text());",
							"",
							"pm.test(\"data updated correctly\", function () {",
							"    pm.expect(jsonData).to.have.length(1);",
							"    pm.expect(jsonData[0].profileId).to.equal(1);",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "PUT",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n  \"userId\": \"email2@domain.com\",\n  \"profileIds\": [\n    1\n  ]\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{baseUrl}}/api/v1/user-service/user_profiles/update",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"api",
						"v1",
						"user-service",
						"user_profiles",
						"update"
					]
				}
			},
			"response": []
		},
		{
			"name": "Recupera user2 con relativi profili",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"method": "GET",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n  \"userId\": \"email2@domain.com\",\n  \"profileIds\": [\n    1\n  ]\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{baseUrl}}/api/v1/user-service/users/:userId",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"api",
						"v1",
						"user-service",
						"users",
						":userId"
					],
					"variable": [
						{
							"key": "userId",
							"value": "email2@domain.com"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Elimina user2",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 204\", function () {",
							"    pm.response.to.have.status(204);",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "DELETE",
				"header": [],
				"url": {
					"raw": "{{baseUrl}}/api/v1/user-service/users/delete/userId/:userId",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"api",
						"v1",
						"user-service",
						"users",
						"delete",
						"userId",
						":userId"
					],
					"variable": [
						{
							"key": "userId",
							"value": "email2@domain.com"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Fallisci nel recuperare user2 eliminato",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 404\", function () {",
							"    pm.response.to.have.status(404);",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{baseUrl}}/api/v1/user-service/users/:userId",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"api",
						"v1",
						"user-service",
						"users",
						":userId"
					],
					"variable": [
						{
							"key": "userId",
							"value": "email2@domain.com"
						}
					]
				}
			},
			"response": []
		}
	]
}